{"version":3,"sources":["SurveyCreator.js","HomePage.js","FindSurvey.js","LoginForm.js","RegisterForm.js","SurveyForm.js","ErrorPage.js","SurveyStatistics.js","App.js","reportWebVitals.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","SurveyCreator","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","_useState5","_useState6","questions","setQuestions","navigate","useNavigate","saveSurvey","_ref","_asyncToGenerator","_callee","surveyData","_context","map","_ref2","question","options","timestamp","Date","axios","post","console","log","t0","alert","apply","arguments","React","createElement","Container","className","style","marginBottom","Form","Group","controlId","Label","Control","onChange","e","target","as","rows","marginTop","questionIndex","concat","index","event","updatedQuestions","_toConsumableArray","handleQuestionChange","selectedType","handleTypeChange","option","optionIndex","handleOptionChange","Button","onClick","splice","removeOption","variant","addOption","removeQuestion","marginLeft","HomePage","surveys","setSurveys","isLoading","setIsLoading","useEffect","response","data","sortedSurveys","get","Array","isArray","sort","a","b","fetchSurveys","Spinner","animation","role","Row","survey","Col","_id","xs","sm","md","lg","Card","Body","Title","Text","surveyId","FindSurvey","isLoggedIn","document","cookie","includes","useParams","setSurveyData","completeText","setCompleteText","window","email","Cookies","fetchSurveyFromMongoDB","checkresponse","id","responseData","status","_callee2","surveyDataFromMongoDB","formattedSurveyData","_context2","formatSurveyData","formattedData","completeHtml","pages","elements","questionText","questionType","choices","filter","showChoicesOrder","_ref3","_callee3","_context3","questionId","replace","answer","_x","Survey","json","onComplete","LoginForm","handleLogin","location","useLocation","setEmail","password","setPassword","localStorage","getItem","handleRedirect","handleSubmit","preventDefault","set","sameSite","secure","setItem","page","from","margin","onSubmit","htmlFor","placeholder","required","disabled","CircularProgress","size","color","RegisterForm","_useState7","_useState8","isRegistered","setIsRegistered","handleRedirecttoLogin","SurveyForm","Model","minRateDescription","maxRateDescription","showProgressBar","progressBarType","widthMode","width","sendSurveyDataToMongoDB","add","model","ErrorPage","Alert","SurveyStatistics","statistics","setStatistics","fetchStatistics","mergedStatistics","mergedQuestions","ratios","ratio","mergeRatiosByQuestion","_ref4","_ref5","ProgressBar","now","label","toFixed","App","isAuthenticated","setIsAuthenticated","requestedPage","setRequestedPage","isNavbarOpen","setIsNavbarOpen","navbarRef","useRef","userEmail","closeNavbar","Router","ref","Link","to","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","Fragment","NavLink","exact","activeClassName","remove","removeItem","FontAwesomeIcon","icon","faSignOutAlt","Routes","Route","path","element","Navigate","pathname","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.427230a6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './SurveyCreator.css';\r\n\r\nconst SurveyCreator = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [questions, setQuestions] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const handleQuestionChange = (index, event) => {\r\n        const updatedQuestions = [...questions];\r\n        updatedQuestions[index].question = event.target.value;\r\n        setQuestions(updatedQuestions);\r\n    };\r\n\r\n    const handleOptionChange = (questionIndex, optionIndex, event) => {\r\n\r\n        const updatedQuestions = [...questions];\r\n        updatedQuestions[questionIndex].options[optionIndex] = event.target.value;\r\n        setQuestions(updatedQuestions);\r\n        if (questions[questionIndex].type === 'rating') {\r\n            return;\r\n        }\r\n    };\r\n\r\n    const handleTypeChange = (questionIndex, event) => {\r\n        const updatedQuestions = [...questions];\r\n        const selectedType = event.target.value;\r\n        updatedQuestions[questionIndex].type = selectedType;\r\n\r\n        updatedQuestions[questionIndex].options = [];\r\n\r\n        if (selectedType === 'rating') {\r\n            updatedQuestions[questionIndex].options = ['1', '2', '3', '4', '5'];\r\n        }\r\n\r\n        setQuestions(updatedQuestions);\r\n    };\r\n\r\n\r\n    const addQuestion = () => {\r\n        setQuestions([...questions, { question: '', type: '', options: [] }]);\r\n    };\r\n\r\n    const addOption = (questionIndex) => {\r\n        const updatedQuestions = [...questions];\r\n        updatedQuestions[questionIndex].options.push('');\r\n        setQuestions(updatedQuestions);\r\n    };\r\n\r\n    const removeQuestion = (questionIndex) => {\r\n        const updatedQuestions = [...questions];\r\n        updatedQuestions.splice(questionIndex, 1);\r\n        setQuestions(updatedQuestions);\r\n    };\r\n\r\n    const removeOption = (questionIndex, optionIndex) => {\r\n        const updatedQuestions = [...questions];\r\n        updatedQuestions[questionIndex].options.splice(optionIndex, 1);\r\n        setQuestions(updatedQuestions);\r\n    };\r\n\r\n    const saveSurvey = async () => {\r\n        const surveyData = {\r\n            title,\r\n            description,\r\n            questions: questions.map(({ question, type, options }) => ({ question, type, options })),\r\n            timestamp: new Date(),\r\n        };\r\n\r\n        try {\r\n            await axios.post('/api/surveyWithQuestions', surveyData);\r\n            console.log(surveyData);\r\n            console.log('Survey data saved successfully');\r\n            // Success message or handle response accordingly\r\n            navigate(`/`);\r\n        } catch (error) {\r\n            alert('An error occurred while saving survey data');\r\n            console.error(error); // Handle any errors\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container className=\"survey-creator-container\">\r\n            <h3 style={{ marginBottom: '20px' }}>Create Survey</h3>\r\n            <Form>\r\n                <Form.Group controlId=\"surveyTitle\">\r\n                    <Form.Label>Survey Title:</Form.Label>\r\n                    <Form.Control type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"surveyDescription\">\r\n                    <Form.Label>Survey Description:</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={2}\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <div className=\"survey-creator__questions\">\r\n                    <h3 style={{ marginTop: '20px' }}>Questions:</h3>\r\n                    {questions.map((question, questionIndex) => (\r\n                        <div key={questionIndex} className=\"survey-creator__question\">\r\n                            <Form.Group controlId={`question${questionIndex}`}>\r\n                                <Form.Label>Question {questionIndex + 1}:</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    value={question.question}\r\n                                    onChange={(e) => handleQuestionChange(questionIndex, e)}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId={`type${questionIndex}`} style={{ marginTop: '10px' }}>\r\n                                <Form.Label>Question Type:</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    value={question.type}\r\n                                    onChange={(e) => handleTypeChange(questionIndex, e)}\r\n                                >\r\n                                    <option value=\"\">Select Type</option>\r\n                                    <option value=\"radiogroup\">Single Choice</option>\r\n                                    <option value=\"checkbox\">Multiple Choice</option>\r\n                                    <option value=\"dropdown\">Dropdown</option>\r\n                                    <option value=\"rating\">Rating</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {question.type === 'rating' ? (\r\n                                <Form.Group controlId={`ratingOptions${questionIndex}`} style={{ marginTop: '10px' }}>\r\n                                    <Form.Label>Rating Options:</Form.Label>\r\n                                </Form.Group>\r\n                            ) : (\r\n                                <Form.Group controlId={`ratingOptions${questionIndex}`}>\r\n\r\n                                </Form.Group>\r\n                            )}\r\n\r\n                            <ul className=\"survey-creator__options\" style={{ marginTop: '10px', marginBottom: '20px' }}>\r\n                                {question.options.map((option, optionIndex) => (\r\n                                    <li key={optionIndex} className=\"survey-creator__option\">\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={option}\r\n                                            onChange={(e) => handleOptionChange(questionIndex, optionIndex, e)}\r\n                                        />\r\n                                        <Button\r\n                                            onClick={() => removeOption(questionIndex, optionIndex)}\r\n                                            variant=\"danger\"\r\n                                            className=\"survey-creator__remove-option\"\r\n                                            style={{ marginTop: '10px', marginBottom: '10px' }}\r\n                                        >\r\n                                            Remove Option\r\n                                        </Button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n\r\n                            <div className=\"survey-creator__question-buttons\">\r\n                                <Button\r\n                                    onClick={() => addOption(questionIndex)}\r\n                                    className=\"survey-creator__add-option\"\r\n                                    style={{ marginBottom: '10px' }}\r\n                                >\r\n                                    Add Option\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    onClick={() => removeQuestion(questionIndex)}\r\n                                    className=\"survey-creator__remove-question\"\r\n                                    style={{ marginLeft: '60px', marginBottom: '10px' }}\r\n                                >\r\n                                    Remove Question\r\n                                </Button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"survey-creator__buttons\">\r\n                    <Button onClick={addQuestion} className=\"survey-creator__add-question\" style={{ marginTop: '10px' }}>\r\n                        Add Question\r\n                    </Button>\r\n                    <Button onClick={saveSurvey} className=\"survey-creator__save-survey\" style={{ marginTop: '10px', marginLeft: '45px' }}>\r\n                        Save Survey\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </Container >\r\n    );\r\n};\r\n\r\nexport default SurveyCreator;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Button, Card, Row, Col, Spinner } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './HomePage.css';\r\nimport axios from 'axios';\r\n\r\nconst HomePage = () => {\r\n    const [surveys, setSurveys] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchSurveys = async () => {\r\n            try {\r\n                const response = await axios.get('/api/surveyWithQuestions');\r\n                const data = await response.data;\r\n\r\n                if (Array.isArray(data)) {\r\n                    const sortedSurveys = data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n                    setSurveys(sortedSurveys);\r\n                } else if (typeof data === 'object') {\r\n                    setSurveys([data]);\r\n                } else {\r\n                    console.error('Surveys data is not an array or object:', data);\r\n                }\r\n\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching surveys:', error);\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchSurveys();\r\n    }, []);\r\n\r\n    const handleViewSurvey = (surveyId) => {\r\n        navigate(`/FindSurvey/${surveyId}`);\r\n    };\r\n\r\n    const handleViewSurveyReport = (surveyId) => {\r\n        navigate(`/SurveyReport/${surveyId}`);\r\n    };\r\n\r\n    return (\r\n        <Container className=\"homepage-container\">\r\n            <h1 className=\"title\">Available Surveys</h1>\r\n            {isLoading ? (\r\n                <div className=\"text-center loading-container\">\r\n                    <Spinner animation=\"border\" role=\"status\" className=\"loading-spinner\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </Spinner>\r\n                    <p className=\"loading-text\">Loading Surveys...</p>\r\n                </div>\r\n            ) : (\r\n                <Row className=\"survey-list\">\r\n                    {surveys.map((survey) => (\r\n                        <Col key={survey._id} xs={12} sm={6} md={4} lg={3}>\r\n                            <Card className=\"survey-card\">\r\n                                <Card.Body>\r\n                                    <Card.Title>{survey.title}</Card.Title>\r\n                                    <Card.Text>{survey.description}</Card.Text>\r\n                                    <div className=\"button-group\">\r\n                                        <Button variant=\"primary\" onClick={() => handleViewSurvey(survey._id)}>\r\n                                            View Survey\r\n                                        </Button>\r\n                                        <Button variant=\"secondary\" onClick={() => handleViewSurveyReport(survey._id)}>\r\n                                            Survey Report\r\n                                        </Button>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Survey } from 'survey-react-ui';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Container, Spinner } from 'react-bootstrap';\r\nimport Cookies from 'js-cookie';\r\nimport 'survey-core/modern.fontless.min.css';\r\n\r\nconst FindSurvey = () => {\r\n    const isLoggedIn = document.cookie.includes('isAuthenticated=true');\r\n    const { surveyId } = useParams('surveyId');\r\n    const [surveyData, setSurveyData] = useState(null);\r\n    const [completeText, setCompleteText] = useState('Error');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!isLoggedIn) {\r\n            navigate('/login');\r\n        }\r\n        window.email = Cookies.get('email');\r\n        fetchSurveyFromMongoDB();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [surveyId]);\r\n\r\n    const checkresponse = async () => {\r\n        try {\r\n            const id = surveyId;\r\n            const response = await axios.post('/api/checkresponse', {\r\n                responseData: {\r\n                    email: Cookies.get(\"email\"),\r\n                    id: id,\r\n                },\r\n            });\r\n            if (response.status === 200) {\r\n                return true; // Response OK, return true\r\n            } else {\r\n                return false; // Response not OK, return false or handle the error case appropriately\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            navigate('/error');\r\n            return false; // Error occurred, return false or handle the error case appropriately\r\n        }\r\n    };\r\n\r\n\r\n    const fetchSurveyFromMongoDB = async () => {\r\n        try {\r\n            const status = await checkresponse();\r\n            if (status === true) {\r\n                const response = await axios.get(`/api/surveyWithQuestions/${surveyId}`);\r\n                const surveyDataFromMongoDB = response.data;\r\n                const formattedSurveyData = formatSurveyData(surveyDataFromMongoDB);\r\n                setSurveyData(formattedSurveyData);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching survey data:', error);\r\n        }\r\n    };\r\n\r\n    const formatSurveyData = (surveyDataFromMongoDB) => {\r\n        console.log('Survey data from MongoDB:', surveyDataFromMongoDB);\r\n\r\n        if (!surveyDataFromMongoDB || !surveyDataFromMongoDB.questions) {\r\n            return null; // Return null or handle the error case appropriately\r\n        }\r\n\r\n        const formattedData = {\r\n            title: surveyDataFromMongoDB.title,\r\n            description: surveyDataFromMongoDB.description,\r\n            completeHtml: completeText,\r\n            pages: [\r\n                {\r\n                    name: 'page1',\r\n                    elements: surveyDataFromMongoDB.questions.map((question) => {\r\n                        const { _id, question: questionText, options, type: questionType } = question;\r\n\r\n                        if (!_id || !questionText || !options || !Array.isArray(options)) {\r\n                            return null; // Skip this question or handle the error case appropriately\r\n                        }\r\n\r\n                        const choices = options\r\n                            .filter((option) => option)\r\n                            .map((option) => option);\r\n\r\n                        if (!choices.length) {\r\n                            return null; // Skip this question or handle the error case appropriately\r\n                        }\r\n\r\n                        return {\r\n                            type: questionType,\r\n                            name: `question${_id}`,\r\n                            title: questionText,\r\n                            choices,\r\n                            showChoicesOrder: 'random',\r\n                        };\r\n                    }).filter((question) => question !== null), // Filter out null values\r\n                },\r\n            ],\r\n        };\r\n\r\n        console.log('Formatted survey data:', formattedData);\r\n\r\n        return formattedData;\r\n    };\r\n\r\n    const saveSurvey = async (survey) => {\r\n        try {\r\n            const email = window.email;\r\n            const id = surveyId;\r\n            const questions = surveyData.pages[0].elements;\r\n            const response = await axios.post('/api/submitSurvey', {\r\n                surveyId: surveyData.id,\r\n                responseData: {\r\n                    email: Cookies.get(\"email\"),\r\n                    id: id,\r\n                    questions: questions.map((question) => {\r\n                        const questionId = question.name.replace('question', '');\r\n                        const questionText = question.title;\r\n                        const answer = survey.data[question.name];\r\n\r\n                        return {\r\n                            questionId: questionId,\r\n                            questionText: questionText,\r\n                            answer: [answer], // Store the answer as an array\r\n                        };\r\n                    }),\r\n                },\r\n            });\r\n\r\n            console.log('Survey data saved successfully:', response.data);\r\n            navigate('/'); // Redirect to another page after completing the survey\r\n        } catch (error) {\r\n            console.error('Error submitting survey data:', error);\r\n            setCompleteText('Error submitting the survey. Please try again.');\r\n            navigate('/error');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container style={{ marginTop: '-10px', marginBottom: '-80px' }}>\r\n            <div>\r\n                {surveyData ? (\r\n                    <Survey json={surveyData} onComplete={saveSurvey} />\r\n                ) : (\r\n                    <div className='text-center' style={{ marginTop: '200px' }}>\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </Spinner>\r\n                        <p className=\"mt-3\">Loading Survey. Please wait...</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FindSurvey;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst LoginForm = ({ handleLogin }) => {\r\n    const location = useLocation();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Check if user is already authenticated\r\n        if (localStorage.getItem('isLoggedIn') === 'true') {\r\n            handleLogin();\r\n            handleRedirect();\r\n        }\r\n    }, [handleLogin]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            await axios.post('/api/login', { email, password });\r\n            // Store email ID in a cookie\r\n            Cookies.set('email', email, { sameSite: 'None', secure: true });\r\n            // Store authentication status in local storage\r\n            localStorage.setItem('isLoggedIn', 'true');\r\n            handleLogin();\r\n            handleRedirect();\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleRedirect = () => {\r\n        var page = (location.state && location.state.from) || '/';\r\n        navigate(page);\r\n    };\r\n\r\n    const handleRedirectToRegister = () => {\r\n        navigate('/register');\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\" style={{ margin: '20px', marginTop: '80px' }}>\r\n            <h2 className=\"login-heading\">Login</h2>\r\n            <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\" style={{ margin: '20px' }}>\r\n                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter your email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\" style={{ margin: '20px' }}>\r\n                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter your password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-md btn-block\"\r\n                    style={{ margin: '20px', marginTop: '2px' }}\r\n                    disabled={isLoading} // Disable the button while loading\r\n                >\r\n                    {isLoading ? <CircularProgress size={20} color=\"inherit\" style={{ marginTop: '6px' }} /> : 'Login'}\r\n                </button>\r\n            </form>\r\n            <p className=\"register-text\" style={{ margin: '20px', marginTop: '2px' }}>\r\n                Don't have an account? <button className=\"btn btn-link\" onClick={handleRedirectToRegister} style={{ marginTop: '-5px' }}>Register</button>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst RegisterForm = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isRegistered, setIsRegistered] = useState(true);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            await axios.post('/api/register', { email, password });\r\n            handleRedirecttoLogin();\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            setIsLoading(false);\r\n            setIsRegistered(false);\r\n        }\r\n    };\r\n\r\n    const handleRedirecttoLogin = () => {\r\n        navigate('/login');\r\n    };\r\n\r\n    return (\r\n        <div className=\"register-container\" style={{ margin: '20px', marginTop: '80px' }}>\r\n            <h2 className=\"register-heading\">Register</h2>\r\n            <form className=\"register-form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\" style={{ margin: '20px' }}>\r\n                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter your email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\" style={{ margin: '20px' }}>\r\n                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter your password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                {!isRegistered && (\r\n                    <p className=\"error-message\" style={{ color: 'red', margin: '20px' }}>User is already registered!</p>\r\n                )}\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-md btn-block\"\r\n                    style={{ margin: '20px', marginTop: '2px' }}\r\n                    disabled={isLoading}\r\n                >\r\n                    {isLoading ? <CircularProgress size={20} color=\"inherit\" style={{ marginTop: '6px' }} /> : 'Register'}\r\n                </button>\r\n            </form>\r\n            <p className=\"login-text\" style={{ margin: '20px', marginTop: '2px' }}>Already have an account? <button className=\"btn btn-link\" onClick={handleRedirecttoLogin} style={{ marginTop: '-5px' }}>Login</button></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import { Model } from 'survey-core';\r\nimport { Survey } from 'survey-react-ui';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport 'survey-core/modern.fontless.min.css';\r\n\r\nconst SurveyForm = () => {\r\n\r\n    const [surveyData, setSurveyData] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        const surveyJson = {\r\n            \"title\": \"A Comprehensive Survey on Student Technology Usage and Preferences\",\r\n            \"description\": \"Your opinion matters to us!\",\r\n            \"pages\": [\r\n                {\r\n                    \"elements\": [\r\n                        {\r\n                            \"type\": \"checkbox\",\r\n                            \"name\": \"devices\",\r\n                            \"title\": \"1. What types of devices do you use for studying and school-related tasks? (Select all that apply)\",\r\n                            \"choices\": [\r\n                                \"Laptop\",\r\n                                \"Desktop computer\",\r\n                                \"Tablet\",\r\n                                \"Smartphone\",\r\n                                \"Other (please specify)\"\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"type\": \"radiogroup\",\r\n                            \"name\": \"operatingSystem\",\r\n                            \"title\": \"2. Which operating system(s) do you primarily use on your devices?\",\r\n                            \"choices\": [\r\n                                \"Windows\",\r\n                                \"macOS\",\r\n                                \"Linux\",\r\n                                \"iOS\",\r\n                                \"Android\",\r\n                                \"Other (please specify)\"\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"type\": \"radiogroup\",\r\n                            \"name\": \"technologyUsage\",\r\n                            \"title\": \"3. How often do you use technology for educational purposes outside of school hours?\",\r\n                            \"choices\": [\r\n                                \"Never\",\r\n                                \"Rarely\",\r\n                                \"Occasionally\",\r\n                                \"Frequently\",\r\n                                \"Always\"\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"type\": \"checkbox\",\r\n                            \"name\": \"noteTakingApps\",\r\n                            \"title\": \"4. What are your preferred software or apps for note-taking and organizing your study materials? (Select all that apply)\",\r\n                            \"choices\": [\r\n                                \"Microsoft OneNote\",\r\n                                \"Evernote\",\r\n                                \"Google Keep\",\r\n                                \"Notion\",\r\n                                \"Apple Notes\",\r\n                                \"Other (please specify)\",\r\n                                \"I don't use any specific software or apps\"\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"type\": \"rating\",\r\n                            \"name\": \"internetConnectivity\",\r\n                            \"title\": \"5. How important is access to reliable internet connectivity for your academic success?\",\r\n                            \"minRateDescription\": \"Not important\",\r\n                            \"maxRateDescription\": \"Extremely important\"\r\n                        },\r\n                        {\r\n                            \"type\": \"comment\",\r\n                            \"name\": \"onlineLearningPlatforms\",\r\n                            \"title\": \"6. Have you used online learning platforms or educational apps? If yes, please list the platforms or apps you have used.\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"showProgressBar\": \"top\",\r\n            \"progressBarType\": \"questions\",\r\n            \"widthMode\": \"static\",\r\n            \"width\": \"864px\"\r\n        };\r\n\r\n        const survey = new Model(surveyJson);\r\n        setSurveyData(survey);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const sendSurveyDataToMongoDB = async () => {\r\n            try {\r\n                await axios.post('/api/surveyCollection', surveyData.data);\r\n                console.log('Survey data saved successfully');\r\n                // Success message or handle response accordingly\r\n            } catch (error) {\r\n                alert('An error occurred while saving survey data');\r\n                console.error(error); // Handle any errors\r\n            }\r\n        };\r\n\r\n        if (surveyData) {\r\n            surveyData.onComplete.add(sendSurveyDataToMongoDB);\r\n        }\r\n    }, [surveyData]); // eslint-disable-next-line\r\n\r\n    if (surveyData) {\r\n        return <Container style={{ marginTop: '-10px', marginBottom: '-80px' }}>\r\n            <Survey model={surveyData} /></Container>;\r\n    }\r\n\r\n    return <Container style={{ marginTop: '60px' }}><div>Loading survey...</div></Container>;\r\n};\r\n\r\nexport default SurveyForm;","import React from 'react';\r\nimport { Container, Row, Col, Alert, Button } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ErrorPage = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const redirectToDashboard = () => {\r\n        navigate('/');\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={7}>\r\n                    <Alert variant=\"danger\">\r\n                        <h1 className=\"mb-4 mt-4\">Error occurred during displaying the Survey!</h1>\r\n                        <p className=\"lead\">You have already submitted this survey.</p>\r\n                        <p>Please contact our support team if you have any further questions.</p>\r\n                    </Alert>\r\n                    <div className=\"text-center\">\r\n                        <Button variant=\"primary\" onClick={() => redirectToDashboard()}>Back to Dashboard</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ErrorPage;\r\n","// SurveyStatistics.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, ProgressBar } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport './SurveyStatistics.css';\r\nimport axios from 'axios';\r\n\r\nconst SurveyStatistics = () => {\r\n    const { surveyId } = useParams();\r\n    const [statistics, setStatistics] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchStatistics = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/surveys/${surveyId}/statistics`, {\r\n                    responseData: {\r\n                        id: surveyId,\r\n                    },\r\n                });\r\n                const data = await response.data;\r\n                setStatistics(data);\r\n            } catch (error) {\r\n                console.error('Error fetching survey statistics:', error);\r\n            }\r\n        };\r\n\r\n        fetchStatistics();\r\n    }, [surveyId]);\r\n\r\n    const mergeRatiosByQuestion = (statistics) => {\r\n        const mergedStatistics = [];\r\n        const mergedQuestions = {};\r\n\r\n        statistics.forEach(({ questionText, ratios }) => {\r\n            if (!mergedQuestions[questionText]) {\r\n                mergedQuestions[questionText] = [];\r\n            }\r\n\r\n            ratios.forEach(({ answer, ratio }) => {\r\n                mergedQuestions[questionText].push({ answer, ratio });\r\n            });\r\n        });\r\n\r\n        for (const questionText in mergedQuestions) {\r\n            mergedStatistics.push({ questionText, ratios: mergedQuestions[questionText] });\r\n        }\r\n\r\n        return mergedStatistics;\r\n    };\r\n\r\n    const mergedStatistics = mergeRatiosByQuestion(statistics);\r\n\r\n    return (\r\n        <Container className=\"survey-statistics-container mt-9\" style={{ marginTop: '80px' }}>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={8}>\r\n                    <h2 className=\"text-center mb-4\">Survey Statistics for Survey ID: {surveyId}</h2>\r\n                    {mergedStatistics.length > 0 ? (\r\n                        <div className=\"survey-statistics\">\r\n                            {mergedStatistics.map(({ questionText, ratios }) => (\r\n                                <Card key={questionText} className=\"survey-question-card\">\r\n                                    <Card.Body>\r\n                                        <Card.Title>{questionText}</Card.Title>\r\n                                        {ratios.map(({ answer, ratio }, index) => (\r\n                                            <div key={index} className=\"answer-item\">\r\n                                                <div className=\"answer-label\">\r\n                                                    <span className=\"answer-text\">{answer}</span>\r\n                                                </div>\r\n\r\n                                                <div className=\"answer-progress\">\r\n                                                    <div className=\"progress-bar-container\">\r\n                                                        <ProgressBar now={ratio * 100} label={`${(ratio * 100).toFixed(2)}%`} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <p className=\"text-center\">No statistics available.</p>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SurveyStatistics;\r\n","import React, { useEffect, useState, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, NavLink, Navigate } from 'react-router-dom';\nimport SurveyCreator from './SurveyCreator';\nimport HomePage from './HomePage';\nimport FindSurvey from './FindSurvey';\nimport LoginForm from './LoginForm';\nimport RegisterForm from './RegisterForm';\nimport SurveyForm from './SurveyForm';\nimport ErrorPage from './ErrorPage';\nimport SurveyStatistics from './SurveyStatistics';\nimport Cookies from 'js-cookie';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport './App.css';\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [requestedPage, setRequestedPage] = useState(null);\n  const [isNavbarOpen, setIsNavbarOpen] = useState(false);\n  const navbarRef = useRef(null);\n  var userEmail = Cookies.get(\"email\");\n\n  useEffect(() => {\n    // Check for authentication status in browser cookies on component mount\n    const storedAuthStatus = document.cookie.includes('isAuthenticated=true');\n    if (storedAuthStatus) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  // Function to handle successful login and set the authentication status\n  const handleLogin = () => {\n    setIsAuthenticated(true);\n    // Store the authentication status in browser cookies\n    document.cookie = 'isAuthenticated=true; path=/';\n    // Redirect the user to the requested page\n    if (requestedPage) {\n      setRequestedPage(null); // Reset requestedPage state\n    }\n  };\n\n  // Function to handle logout and reset the authentication status\n  const handleLogout = () => {\n    Cookies.remove('email');\n    localStorage.removeItem('isLoggedIn');\n    setIsAuthenticated(false);\n    setIsNavbarOpen(false);\n  };\n\n  // Function to toggle the navbar collapse on mobile screens\n  const toggleNavbar = () => {\n    setIsNavbarOpen(!isNavbarOpen);\n  };\n\n  // Function to close the navbar when a menu item is clicked\n  const closeNavbar = () => {\n    setIsNavbarOpen(false);\n  };\n\n  return (\n    <Router>\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\" ref={navbarRef}>\n          <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/\" onClick={closeNavbar}>\n              Tech Insights\n            </Link>\n\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#navbarNav\"\n              aria-controls=\"navbarNav\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n              onClick={toggleNavbar}\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className={`collapse navbar-collapse${isNavbarOpen ? ' show' : ''}`} id=\"navbarNav\">\n              {isAuthenticated ? (\n                <>\n                  <div className={`collapse navbar-collapse${isNavbarOpen ? ' show' : ''} justify-content-start`} id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                      <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" exact to=\"/\" activeClassName=\"active\" onClick={closeNavbar}>\n                          Home\n                        </NavLink>\n                      </li>\n                      <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/create\" activeClassName=\"active\" onClick={closeNavbar}>\n                          Create Survey\n                        </NavLink>\n                      </li>\n                      <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/sampleform\" activeClassName=\"active\" onClick={closeNavbar}>\n                          Sample Form\n                        </NavLink>\n                      </li>\n                    </ul>\n                  </div>\n                  <div className={`collapse navbar-collapse${isNavbarOpen ? ' show' : ''} justify-content-end`} id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                      <li className=\"nav-item\">\n                        <span className=\"nav-link\" style={{ color: \"black\" }}>\n                          {\"Welcome, \" + userEmail}\n                        </span>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/\" onClick={handleLogout}>\n                          <FontAwesomeIcon icon={faSignOutAlt} />\n                        </Link>\n                      </li>\n                    </ul>\n                  </div>\n                </>\n              ) : (\n                <>\n                  <div className={`collapse navbar-collapse${isNavbarOpen ? ' show' : ''} justify-content-end`} id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                      <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/login\" onClick={closeNavbar}>\n                          Login\n                        </NavLink>\n                      </li>\n                      <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/register\" onClick={closeNavbar}>\n                          Register\n                        </NavLink>\n                      </li>\n                    </ul>\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"container mt-4\">\n          <Routes>\n            <Route\n              path=\"/login\"\n              element={<LoginForm handleLogin={handleLogin} setRequestedPage={setRequestedPage} />}\n            />\n            <Route path=\"/register\" element={<RegisterForm />} />\n            <Route path=\"/sampleform\" element={<SurveyForm />} />\n            <Route path=\"/error\" element={<ErrorPage />} />\n            <Route\n              path=\"/\"\n              element={\n                isAuthenticated ? (\n                  <HomePage />\n                ) : (\n                  <Navigate to=\"/login\" replace state={{ from: '/' }} />\n                )\n              }\n            />\n            <Route\n              path=\"/FindSurvey/:surveyId\"\n              element={\n                isAuthenticated ? (\n                  <FindSurvey />\n                ) : (\n                  <Navigate\n                    to=\"/login\"\n                    replace\n                    state={{ from: `${window.location.pathname}` }}\n                  />\n                )\n              }\n            />\n            <Route\n              path=\"/SurveyReport/:surveyId\"\n              element={\n                isAuthenticated ? (\n                  <SurveyStatistics />\n                ) : (\n                  <Navigate\n                    to=\"/login\"\n                    replace\n                    state={{ from: `${window.location.pathname}` }}\n                  />\n                )\n              }\n            />\n            <Route\n              path=\"/create\"\n              element={\n                isAuthenticated ? (\n                  <SurveyCreator />\n                ) : (\n                  <Navigate to=\"/login\" replace state={{ from: '/create' }} />\n                )\n              }\n            />\n          </Routes>\n        </div>\n      </div >\n    </Router >\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\naxios.defaults.baseURL = 'https://techinsights-backend.onrender.com/';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}